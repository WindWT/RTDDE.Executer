<Application x:Class="RTDDataExecuter.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <Color x:Key="DefaultColor" A="255" R="240" G ="240" B="240"/>
        <Color x:Key="HighlightColor" A="255" R="229" G ="229" B="229"/>
        <Color x:Key="PressedColor" A="255" R="215" G ="215" B="215"/>

        <SolidColorBrush x:Key="DefaultBrush" Color="{StaticResource DefaultColor}" />
        <SolidColorBrush x:Key="HighlightBrush" Color="{StaticResource HighlightColor}" />
        <SolidColorBrush x:Key="PressedBrush" Color="{StaticResource PressedColor}" />

        <LinearGradientBrush x:Key="SeparatorBrush" MappingMode="Absolute"
                             SpreadMethod="Repeat"
                             StartPoint="0,0" EndPoint="10,0">
            <LinearGradientBrush.GradientStops>
                <GradientStop Color="Transparent" Offset="0.25"/>
                <GradientStop Color="{StaticResource DefaultColor}" Offset="0.25"/>
                <GradientStop Color="{StaticResource DefaultColor}" Offset="0.75"/>
                <GradientStop Color="Transparent" Offset="0.75"/>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>

        <Style TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="Padding" Value="0,1,0,1"></Setter>
        </Style>
        <Style TargetType="DataGrid">
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="RowHeaderWidth" Value="0"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="SelectionUnit" Value="FullRow"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="EnableRowVirtualization" Value="True"/>
        </Style>
        <Style TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="{StaticResource DefaultBrush}" />
            <Setter Property="Padding" Value="2"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="0,0,1,1"/>
        </Style>
        <Style TargetType="WrapPanel">
            <Setter Property="Orientation" Value="Horizontal"/>
            <Setter Property="Margin" Value="0"/>
        </Style>
        <Style TargetType="ToggleButton">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Background" Value="{StaticResource DefaultBrush}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Padding" Value="10,5,10,5"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border BorderThickness="{TemplateBinding BorderThickness}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    Background="{TemplateBinding Background}"
                    Padding="{TemplateBinding Padding}"
                    CornerRadius="0">
                            <ContentControl Content="{TemplateBinding Content}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="False">
                    <Setter Property="Width" Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}}"/>
                    <Setter Property="Foreground" Value="{StaticResource DefaultBrush}" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="Black" />
                    <Setter Property="Background" Value="{StaticResource HighlightBrush}" />
                    <Setter Property="Width" Value="Auto"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Foreground" Value="Black" />
                    <Setter Property="Background" Value="{StaticResource PressedBrush}" />
                    <Setter Property="Width" Value="Auto"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Foreground" Value="Black" />
                    <Setter Property="Background" Value="{StaticResource PressedBrush}" />
                    <Setter Property="Width" Value="Auto"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Background" Value="{StaticResource DefaultBrush}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border BorderThickness="{TemplateBinding BorderThickness}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    Background="{TemplateBinding Background}"
                    Padding="{TemplateBinding Padding}"
                    CornerRadius="0">
                            <ContentControl Content="{TemplateBinding Content}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource HighlightBrush}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{StaticResource PressedBrush}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type Button}" x:Key="CloseButtonStyle">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Background" Value="Pink" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="Padding" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border BorderThickness="{TemplateBinding BorderThickness}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    Background="{TemplateBinding Background}"
                    Padding="{TemplateBinding Padding}"
                    CornerRadius="0">
                            <ContentControl Content="{TemplateBinding Content}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Crimson" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="Firebrick" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Setter Property="BorderBrush" Value="{StaticResource PressedBrush}"/>
        </Style>
        <Style TargetType="RichTextBox">
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Setter Property="BorderBrush" Value="{StaticResource PressedBrush}"/>
        </Style>
        <Style TargetType="Separator">
            <Setter Property="Background" Value="{StaticResource SeparatorBrush}"/>
        </Style>
        <Style TargetType="ComboBox" x:Key="BaseComboBox">
            <Setter Property="DisplayMemberPath" Value="Key"/>
            <Setter Property="SelectedValuePath" Value="Value"/>
            <Setter Property="SelectedIndex" Value="0"/>
        </Style>
    </Application.Resources>
</Application>
